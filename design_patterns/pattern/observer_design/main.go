package main


/*
行为型设计模式
创建型设计模式主要解决“对象的创建”问题 创建和使用代码解耦
结构型设计模式主要解决“类或对象的组合或组装”问题 不同功能代码解耦
行为型设计模式主要解决的就是“类或对象之间的 交互”问题。 不同的行为代码解耦
观察者模式：
在对象之间定义一个一对多的依赖，当一个对象状态改变的时候，所有依赖的对象都会自 动收到通知。

 */
func main() {

}
